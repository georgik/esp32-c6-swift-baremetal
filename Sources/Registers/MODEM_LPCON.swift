// Generated by svd2swift.

import MMIO

/// MODEM_LPCON Peripheral
@RegisterBlock
public struct MODEM_LPCON {
    /// TEST_CONF
    @RegisterBlock(offset: 0x0)
    public var test_conf: Register<TEST_CONF>

    /// LP_TIMER_CONF
    @RegisterBlock(offset: 0x4)
    public var lp_timer_conf: Register<LP_TIMER_CONF>

    /// COEX_LP_CLK_CONF
    @RegisterBlock(offset: 0x8)
    public var coex_lp_clk_conf: Register<COEX_LP_CLK_CONF>

    /// WIFI_LP_CLK_CONF
    @RegisterBlock(offset: 0xc)
    public var wifi_lp_clk_conf: Register<WIFI_LP_CLK_CONF>

    /// I2C_MST_CLK_CONF
    @RegisterBlock(offset: 0x10)
    public var i2c_mst_clk_conf: Register<I2C_MST_CLK_CONF>

    /// MODEM_32K_CLK_CONF
    @RegisterBlock(offset: 0x14)
    public var modem_32k_clk_conf: Register<MODEM_32K_CLK_CONF>

    /// CLK_CONF
    @RegisterBlock(offset: 0x18)
    public var clk_conf: Register<CLK_CONF>

    /// CLK_CONF_FORCE_ON
    @RegisterBlock(offset: 0x1c)
    public var clk_conf_force_on: Register<CLK_CONF_FORCE_ON>

    /// CLK_CONF_POWER_ST
    @RegisterBlock(offset: 0x20)
    public var clk_conf_power_st: Register<CLK_CONF_POWER_ST>

    /// RST_CONF
    @RegisterBlock(offset: 0x24)
    public var rst_conf: Register<RST_CONF>

    /// MEM_CONF
    @RegisterBlock(offset: 0x28)
    public var mem_conf: Register<MEM_CONF>

    /// DATE
    @RegisterBlock(offset: 0x2c)
    public var date: Register<DATE>
}

extension MODEM_LPCON {
    /// TEST_CONF
    @Register(bitWidth: 32)
    public struct TEST_CONF {
        /// CLK_EN
        @ReadWrite(bits: 0..<1)
        public var clk_en: CLK_EN

        /// CLK_DEBUG_ENA
        @ReadWrite(bits: 1..<2)
        public var clk_debug_ena: CLK_DEBUG_ENA
    }

    /// LP_TIMER_CONF
    @Register(bitWidth: 32)
    public struct LP_TIMER_CONF {
        /// CLK_LP_TIMER_SEL_OSC_SLOW
        @ReadWrite(bits: 0..<1)
        public var clk_lp_timer_sel_osc_slow: CLK_LP_TIMER_SEL_OSC_SLOW

        /// CLK_LP_TIMER_SEL_OSC_FAST
        @ReadWrite(bits: 1..<2)
        public var clk_lp_timer_sel_osc_fast: CLK_LP_TIMER_SEL_OSC_FAST

        /// CLK_LP_TIMER_SEL_XTAL
        @ReadWrite(bits: 2..<3)
        public var clk_lp_timer_sel_xtal: CLK_LP_TIMER_SEL_XTAL

        /// CLK_LP_TIMER_SEL_XTAL32K
        @ReadWrite(bits: 3..<4)
        public var clk_lp_timer_sel_xtal32k: CLK_LP_TIMER_SEL_XTAL32K

        /// CLK_LP_TIMER_DIV_NUM
        @ReadWrite(bits: 4..<16)
        public var clk_lp_timer_div_num: CLK_LP_TIMER_DIV_NUM
    }

    /// COEX_LP_CLK_CONF
    @Register(bitWidth: 32)
    public struct COEX_LP_CLK_CONF {
        /// CLK_COEX_LP_SEL_OSC_SLOW
        @ReadWrite(bits: 0..<1)
        public var clk_coex_lp_sel_osc_slow: CLK_COEX_LP_SEL_OSC_SLOW

        /// CLK_COEX_LP_SEL_OSC_FAST
        @ReadWrite(bits: 1..<2)
        public var clk_coex_lp_sel_osc_fast: CLK_COEX_LP_SEL_OSC_FAST

        /// CLK_COEX_LP_SEL_XTAL
        @ReadWrite(bits: 2..<3)
        public var clk_coex_lp_sel_xtal: CLK_COEX_LP_SEL_XTAL

        /// CLK_COEX_LP_SEL_XTAL32K
        @ReadWrite(bits: 3..<4)
        public var clk_coex_lp_sel_xtal32k: CLK_COEX_LP_SEL_XTAL32K

        /// CLK_COEX_LP_DIV_NUM
        @ReadWrite(bits: 4..<16)
        public var clk_coex_lp_div_num: CLK_COEX_LP_DIV_NUM
    }

    /// WIFI_LP_CLK_CONF
    @Register(bitWidth: 32)
    public struct WIFI_LP_CLK_CONF {
        /// CLK_WIFIPWR_LP_SEL_OSC_SLOW
        @ReadWrite(bits: 0..<1)
        public var clk_wifipwr_lp_sel_osc_slow: CLK_WIFIPWR_LP_SEL_OSC_SLOW

        /// CLK_WIFIPWR_LP_SEL_OSC_FAST
        @ReadWrite(bits: 1..<2)
        public var clk_wifipwr_lp_sel_osc_fast: CLK_WIFIPWR_LP_SEL_OSC_FAST

        /// CLK_WIFIPWR_LP_SEL_XTAL
        @ReadWrite(bits: 2..<3)
        public var clk_wifipwr_lp_sel_xtal: CLK_WIFIPWR_LP_SEL_XTAL

        /// CLK_WIFIPWR_LP_SEL_XTAL32K
        @ReadWrite(bits: 3..<4)
        public var clk_wifipwr_lp_sel_xtal32k: CLK_WIFIPWR_LP_SEL_XTAL32K

        /// CLK_WIFIPWR_LP_DIV_NUM
        @ReadWrite(bits: 4..<16)
        public var clk_wifipwr_lp_div_num: CLK_WIFIPWR_LP_DIV_NUM
    }

    /// I2C_MST_CLK_CONF
    @Register(bitWidth: 32)
    public struct I2C_MST_CLK_CONF {
        /// CLK_I2C_MST_SEL_160M
        @ReadWrite(bits: 0..<1)
        public var clk_i2c_mst_sel_160m: CLK_I2C_MST_SEL_160M
    }

    /// MODEM_32K_CLK_CONF
    @Register(bitWidth: 32)
    public struct MODEM_32K_CLK_CONF {
        /// CLK_MODEM_32K_SEL
        @ReadWrite(bits: 0..<2)
        public var clk_modem_32k_sel: CLK_MODEM_32K_SEL
    }

    /// CLK_CONF
    @Register(bitWidth: 32)
    public struct CLK_CONF {
        /// CLK_WIFIPWR_EN
        @ReadWrite(bits: 0..<1)
        public var clk_wifipwr_en: CLK_WIFIPWR_EN

        /// CLK_COEX_EN
        @ReadWrite(bits: 1..<2)
        public var clk_coex_en: CLK_COEX_EN

        /// CLK_I2C_MST_EN
        @ReadWrite(bits: 2..<3)
        public var clk_i2c_mst_en: CLK_I2C_MST_EN

        /// CLK_LP_TIMER_EN
        @ReadWrite(bits: 3..<4)
        public var clk_lp_timer_en: CLK_LP_TIMER_EN
    }

    /// CLK_CONF_FORCE_ON
    @Register(bitWidth: 32)
    public struct CLK_CONF_FORCE_ON {
        /// CLK_WIFIPWR_FO
        @ReadWrite(bits: 0..<1)
        public var clk_wifipwr_fo: CLK_WIFIPWR_FO

        /// CLK_COEX_FO
        @ReadWrite(bits: 1..<2)
        public var clk_coex_fo: CLK_COEX_FO

        /// CLK_I2C_MST_FO
        @ReadWrite(bits: 2..<3)
        public var clk_i2c_mst_fo: CLK_I2C_MST_FO

        /// CLK_LP_TIMER_FO
        @ReadWrite(bits: 3..<4)
        public var clk_lp_timer_fo: CLK_LP_TIMER_FO

        /// CLK_BCMEM_FO
        @ReadWrite(bits: 4..<5)
        public var clk_bcmem_fo: CLK_BCMEM_FO

        /// CLK_I2C_MST_MEM_FO
        @ReadWrite(bits: 5..<6)
        public var clk_i2c_mst_mem_fo: CLK_I2C_MST_MEM_FO

        /// CLK_CHAN_FREQ_MEM_FO
        @ReadWrite(bits: 6..<7)
        public var clk_chan_freq_mem_fo: CLK_CHAN_FREQ_MEM_FO

        /// CLK_PBUS_MEM_FO
        @ReadWrite(bits: 7..<8)
        public var clk_pbus_mem_fo: CLK_PBUS_MEM_FO

        /// CLK_AGC_MEM_FO
        @ReadWrite(bits: 8..<9)
        public var clk_agc_mem_fo: CLK_AGC_MEM_FO

        /// CLK_DC_MEM_FO
        @ReadWrite(bits: 9..<10)
        public var clk_dc_mem_fo: CLK_DC_MEM_FO
    }

    /// CLK_CONF_POWER_ST
    @Register(bitWidth: 32)
    public struct CLK_CONF_POWER_ST {
        /// CLK_WIFIPWR_ST_MAP
        @ReadWrite(bits: 16..<20)
        public var clk_wifipwr_st_map: CLK_WIFIPWR_ST_MAP

        /// CLK_COEX_ST_MAP
        @ReadWrite(bits: 20..<24)
        public var clk_coex_st_map: CLK_COEX_ST_MAP

        /// CLK_I2C_MST_ST_MAP
        @ReadWrite(bits: 24..<28)
        public var clk_i2c_mst_st_map: CLK_I2C_MST_ST_MAP

        /// CLK_LP_APB_ST_MAP
        @ReadWrite(bits: 28..<32)
        public var clk_lp_apb_st_map: CLK_LP_APB_ST_MAP
    }

    /// RST_CONF
    @Register(bitWidth: 32)
    public struct RST_CONF {
        /// RST_WIFIPWR
        @WriteOnly(bits: 0..<1)
        public var rst_wifipwr: RST_WIFIPWR

        /// RST_COEX
        @WriteOnly(bits: 1..<2)
        public var rst_coex: RST_COEX

        /// RST_I2C_MST
        @WriteOnly(bits: 2..<3)
        public var rst_i2c_mst: RST_I2C_MST

        /// RST_LP_TIMER
        @WriteOnly(bits: 3..<4)
        public var rst_lp_timer: RST_LP_TIMER
    }

    /// MEM_CONF
    @Register(bitWidth: 32)
    public struct MEM_CONF {
        /// DC_MEM_FORCE_PU
        @ReadWrite(bits: 0..<1)
        public var dc_mem_force_pu: DC_MEM_FORCE_PU

        /// DC_MEM_FORCE_PD
        @ReadWrite(bits: 1..<2)
        public var dc_mem_force_pd: DC_MEM_FORCE_PD

        /// AGC_MEM_FORCE_PU
        @ReadWrite(bits: 2..<3)
        public var agc_mem_force_pu: AGC_MEM_FORCE_PU

        /// AGC_MEM_FORCE_PD
        @ReadWrite(bits: 3..<4)
        public var agc_mem_force_pd: AGC_MEM_FORCE_PD

        /// PBUS_MEM_FORCE_PU
        @ReadWrite(bits: 4..<5)
        public var pbus_mem_force_pu: PBUS_MEM_FORCE_PU

        /// PBUS_MEM_FORCE_PD
        @ReadWrite(bits: 5..<6)
        public var pbus_mem_force_pd: PBUS_MEM_FORCE_PD

        /// BC_MEM_FORCE_PU
        @ReadWrite(bits: 6..<7)
        public var bc_mem_force_pu: BC_MEM_FORCE_PU

        /// BC_MEM_FORCE_PD
        @ReadWrite(bits: 7..<8)
        public var bc_mem_force_pd: BC_MEM_FORCE_PD

        /// I2C_MST_MEM_FORCE_PU
        @ReadWrite(bits: 8..<9)
        public var i2c_mst_mem_force_pu: I2C_MST_MEM_FORCE_PU

        /// I2C_MST_MEM_FORCE_PD
        @ReadWrite(bits: 9..<10)
        public var i2c_mst_mem_force_pd: I2C_MST_MEM_FORCE_PD

        /// CHAN_FREQ_MEM_FORCE_PU
        @ReadWrite(bits: 10..<11)
        public var chan_freq_mem_force_pu: CHAN_FREQ_MEM_FORCE_PU

        /// CHAN_FREQ_MEM_FORCE_PD
        @ReadWrite(bits: 11..<12)
        public var chan_freq_mem_force_pd: CHAN_FREQ_MEM_FORCE_PD

        /// MODEM_PWR_MEM_WP
        @ReadWrite(bits: 12..<15)
        public var modem_pwr_mem_wp: MODEM_PWR_MEM_WP

        /// MODEM_PWR_MEM_WA
        @ReadWrite(bits: 15..<18)
        public var modem_pwr_mem_wa: MODEM_PWR_MEM_WA

        /// MODEM_PWR_MEM_RA
        @ReadWrite(bits: 18..<20)
        public var modem_pwr_mem_ra: MODEM_PWR_MEM_RA
    }

    /// DATE
    @Register(bitWidth: 32)
    public struct DATE {
        /// DATE_FIELD
        @ReadWrite(bits: 0..<28)
        public var date_field: DATE_FIELD
    }
}
